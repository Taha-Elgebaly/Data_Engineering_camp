 1- docker --help

rm        Remove one or more containers  <- the wanted answer 

========================================================================
2- docker run -it python:3.9 bash 
root@af02a32dc6fc:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0 <- the wanted answer

========================================================================
Question 3. Count records
How many taxi trips were totally made on September 18th 2019?

SELECT COUNT(*) AS total_trips
FROM green_taxi_data
WHERE DATE(lpep_pickup_datetime) = '2019-09-18'
  AND DATE(lpep_dropoff_datetime) = '2019-09-18';
 total_trips 
-------------
       15612
=======================================================================

Question 4. Largest trip for each day
Which was the pick up day with the largest trip distance Use the pick up time for your calculations.

SELECT
  MAX(trip_distance) AS max_trip_distance,
  CAST(lpep_pickup_datetime AS DATE) AS pickup_date
FROM
  green_taxi_data
GROUP BY
  pickup_date
ORDER BY
  max_trip_distance DESC;

  max   | lpep_pickup_datetime 
--------+----------------------
 341.64 | 2019-09-26
 135.53 | 2019-09-21
  89.64 | 2019-09-28

==========================================================

SELECT
  tz."Borough" AS pickup_borough,
  SUM(gtd."total_amount") AS total_amount_sum
FROM
  green_taxi_data gtd
JOIN
  taxi_zones tz ON gtd."PULocationID" = tz."LocationID"
WHERE
  DATE(gtd."lpep_pickup_datetime") = '2019-09-18'
  AND gtd."PULocationID" IS NOT NULL
GROUP BY
  tz."Borough"
HAVING
  SUM(gtd."total_amount") > 50000
ORDER BY
  total_amount_sum DESC
LIMIT
  3;


 pickup_borough | total_amount_sum  
----------------+-------------------
 Brooklyn       | 96333.23999999902
 Manhattan      |  92271.2999999985
 Queens         | 78671.70999999889

=========================================================
 7- Terraform

(base) taha@taha-VMware-Virtual-Platform:~/Desktop/terrademo$ terraform apply 

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated
with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.demo_dataset will be created
  + resource "google_bigquery_dataset" "demo_dataset" {
      + creation_time              = (known after apply)
      + dataset_id                 = "demo_dataset"
      + default_collation          = (known after apply)
      + delete_contents_on_destroy = false
      + effective_labels           = (known after apply)
      + etag                       = (known after apply)
      + id                         = (known after apply)
      + is_case_insensitive        = (known after apply)
      + last_modified_time         = (known after apply)
      + location                   = "US"
      + max_time_travel_hours      = (known after apply)
      + project                    = "taha2024"
      + self_link                  = (known after apply)
      + storage_billing_model      = (known after apply)
      + terraform_labels           = (known after apply)
    }

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + effective_labels            = (known after apply)
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "taha2024-terra-bucket"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + rpo                         = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = (known after apply)
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "Delete"
            }
          + condition {
              + age                   = 3
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_bigquery_dataset.demo_dataset: Creating...
google_storage_bucket.demo-bucket: Creating...
google_bigquery_dataset.demo_dataset: Creation complete after 2s [id=projects/taha2024/datasets/demo_dataset]
google_storage_bucket.demo-bucket: Creation complete after 2s [id=taha2024-terra-bucket]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
(base) taha@taha-VMware-Virtual-Platform:~/Desktop/terrademo$ 









